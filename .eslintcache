[{"D:\\_react_projects\\trello-clone\\src\\App.tsx":"1","D:\\_react_projects\\trello-clone\\src\\index.tsx":"2","D:\\_react_projects\\trello-clone\\src\\components\\About.tsx":"3","D:\\_react_projects\\trello-clone\\src\\components\\Home.tsx":"4","D:\\_react_projects\\trello-clone\\src\\components\\TodoList.tsx":"5","D:\\_react_projects\\trello-clone\\src\\components\\AddTodoForm.tsx":"6","D:\\_react_projects\\trello-clone\\src\\components\\types.tsx":"7"},{"size":1006,"mtime":1609685738418,"results":"8","hashOfConfig":"9"},{"size":219,"mtime":1609465941582,"results":"10","hashOfConfig":"9"},{"size":108,"mtime":1609555025457,"results":"11","hashOfConfig":"9"},{"size":105,"mtime":1609555022740,"results":"12","hashOfConfig":"9"},{"size":3724,"mtime":1609686054817,"results":"13","hashOfConfig":"9"},{"size":768,"mtime":1609643284741,"results":"14","hashOfConfig":"9"},{"size":323,"mtime":1609646161335,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"idl1ne",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_react_projects\\trello-clone\\src\\App.tsx",[],"D:\\_react_projects\\trello-clone\\src\\index.tsx",[],"D:\\_react_projects\\trello-clone\\src\\components\\About.tsx",[],"D:\\_react_projects\\trello-clone\\src\\components\\Home.tsx",[],"D:\\_react_projects\\trello-clone\\src\\components\\TodoList.tsx",["31","32","33","34"],"D:\\_react_projects\\trello-clone\\src\\components\\AddTodoForm.tsx",["35"],"import React, { useState } from \"react\";\r\nimport { Todo } from \"./types\";\r\n\r\ninterface Props {\r\n  addTodo: (todo: string) => void;\r\n}\r\n\r\nconst AddTodoForm = (Props: Props) => {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNewTodo(e.target.value);\r\n  };\r\n\r\n  const handleAddTodo = (e: React.FormEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    Props.addTodo(newTodo);\r\n    setNewTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input type=\"text\" value={newTodo} onChange={handleChange}></input>\r\n        <button type=\"submit\" onClick={handleAddTodo}>\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","D:\\_react_projects\\trello-clone\\src\\components\\types.tsx",[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":25},{"ruleId":"36","severity":1,"message":"40","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":27},{"ruleId":"36","severity":1,"message":"41","line":5,"column":31,"nodeType":"38","messageId":"39","endLine":5,"endColumn":43},{"ruleId":"36","severity":1,"message":"42","line":68,"column":12,"nodeType":"38","messageId":"39","endLine":68,"endColumn":31},{"ruleId":"36","severity":1,"message":"43","line":2,"column":10,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactCursorPosition' is defined but never used.","'INTERACTIONS' is defined but never used.","'getDragAfterElement' is defined but never used.","'Todo' is defined but never used."]